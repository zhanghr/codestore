<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.github.zhanghr</groupId>
	<artifactId>utils</artifactId>
	<version>0.0.2</version>
	<name>zhanghr</name>
	<description>zhanghr's utils</description>
	<url>https://github.com/zhanghr/OSSRH-49683</url>

	<properties>
		<java.version>1.8</java.version>
	</properties>
	
	
	
	<licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    
    
	 <scm>
	    <connection>scm:git:https://github.com/zhanghr/codestore.git</connection>
	     <developerConnection>scm:git:https://github.com/zhanghr/codestore.git</developerConnection>
	     <url>git:https://github.com/zhanghr/codestore.git</url>
	 </scm>
	 
	 <developers>
        <developer>
            <name>zhanghr</name>
            <email>429763991@qq.com</email>
            <url>https://github.com/zhanghr</url>
        </developer>
    </developers>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-redis</artifactId>
		</dependency>
	</dependencies>
	<!-- 使用个人资料：由于生成javadoc和源jar以及使用GPG签署组件是一个相当耗时的过程，因此这些执行通常与正常的构建配置隔离并移动到配置文件中。然后，在通过激活配置文件执行部署时，将使用此配置文件。 -->
	 <profiles>
	 
    <profile>
        <id>disable-javadoc-doclint</id>
        <activation>
            <jdk>[1.8,)</jdk>
        </activation>
        <properties>
            <additionalparam>-Xdoclint:none</additionalparam>
        </properties>
    </profile>
	 
        <profile>
           <id>ossrh</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
            <build>
            <pluginManagement>
                  <plugins>
                  <!-- 要生成Javadoc和Source jar文件，您必须配置javadoc和源Maven插件 -->
                     <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    
                     <!-- Javadoc -->
               <plugin>
				 <groupId>org.apache.maven.plugins</groupId>
				 <artifactId>maven-javadoc-plugin</artifactId>
				 <executions>
				 <execution>
				 <id>disable-javadoc-doclint</id>
				 <goals>
				 <goal>jar</goal>
				 </goals>
				 <configuration> 
				 <additionalparam>-Xdoclint:none</additionalparam>
				 </configuration>
				 </execution>
				 </executions>
				</plugin>
                    
                    
                    
                    <!--  必须配置GPG插件用于使用以下配置对组件进行签名 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    
                   <!--  <plugin>
					    <groupId>org.sonatype.plugins</groupId>
					    <artifactId>nexus-staging-maven-plugin</artifactId>
					    <version>1.6.8</version>
					    <extensions>true</extensions>
					    <configuration>
					            <serverId>ossrh</serverId>
					            <nexusUrl>https://oss.sonatype.org</nexusUrl>
					            <autoReleaseAfterClose>true</autoReleaseAfterClose>
					    </configuration>
					</plugin> -->
					
				<!-- 	<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin> -->
                    
                    <!-- 
                    
                  如果想把某个模块忽略,需要增加配置  
<plugin>
	<groupId>org.sonatype.plugins</groupId>
	<artifactId>nexus-staging-maven-plugin</artifactId>
	<configuration>
		<skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
	</configuration>
</plugin>
                    
                     -->
                     
                     
                     
                    
                  </plugins>
                  </pluginManagement>
            </build>
            <!-- 【注】snapshotRepository 与 repository 中的 id 一定要与 setting.xml 中 server 的 id 保持一致！ -->
		    <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>


</project>
